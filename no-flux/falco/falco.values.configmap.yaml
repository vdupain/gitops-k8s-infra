apiVersion: v1
kind: ConfigMap
metadata:
  name: falco-values
  namespace: falco
data:
  values.yaml: |-
    mounts:
      volumeMounts:
        - mountPath: /etc/falco/rules.d
          name: rules-volume
      volumes:
        - name: rules-volume
          configMap:
            name: falco-rules

    driver:
      kind: modern_ebpf
    tty: true

    falcosidekick:
      enabled: true
      replicaCount: 1
      webui:
        enabled: true
        replicaCount: 1
        redis:
          storageEnabled: false
        service:
          type: NodePort
          port: 2802
          targetPort: 2802
          nodePort: 30128
      config:
        debug: true
        elasticsearch:
          hostport: "https://opensearch-cluster-master.logging:9200"
          index: "logs-falco"
          type: "_doc"
          suffix: "none"
          username: "admin"
          password: "myStrongPassword123@456"
          flattenfields: false
          createindextemplate: false
          numberofshards: 3
          numberofreplicas: 3
          customheaders: ""
          mutualtls: false
          checkcert: false
          minimumpriority: ""
        syslog:
          host: "vector-syslog.logging"
          port: "15514"
          protocol: "tcp"
          format: "json"


    falcoctl:
      artifact:
        install:
          enabled: true
        follow:
          enabled: true
      config:
        artifact:
          install:
            refs: [falco-rules:latest, falco-incubating-rules:latest, k8saudit-rules:latest]
          follow:
            refs: [falco-rules:latest, falco-incubating-rules:latest, k8saudit-rules:latest]

    services:
      - name: k8saudit-webhook
        type: ClusterIP
        ports:
          - port: 9765
            targetPort: 9765
            protocol: TCP
            name: http

    falco:
      rules_files:
        - /etc/falco/falco_rules.yaml
        - /etc/falco/falco-incubating_rules.yaml
        - /etc/falco/k8s_audit_rules.yaml
        - /etc/falco/rules.d
      plugins:
        - name: k8saudit
          library_path: libk8saudit.so
          init_config: ""
          open_params: "http://:9765/k8s-audit"
        - name: json
          library_path: libjson.so
          init_config: ""
      load_plugins: [k8saudit, json]